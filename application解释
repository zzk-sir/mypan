# 应用服务 WEB 访问端口
host=服务器地址
server.port=7090
server.servlet.context-path=/api
#session过期时间 60M 一个小时
server.servlet.session.timeout=PT60M
#处理favicon
spring.mvc.favicon.enable=false
#异常处理
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
# 设置springboot请求数据最大
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB

#数据库配置
spring.datasource.url=jdbc:mysql://${host}:3306/mypan?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
spring.datasource.username=mysql用户名
spring.datasource.password=密码
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.pool-name=HikariCPDatasource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=180000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1
#发送邮件配置相关
# 配置邮件服务器的地址 smtp.qq.com
spring.mail.host=smtp.qq.com
# 配置邮件服务器的端口（465或587）
spring.mail.port=465
# 配置用户的账号
spring.mail.username=用于发送消息的邮箱
# 配置用户的密码(邮箱授权码)
#spring.mail.password=ozcanhodgeqffajj // 失效
spring.mail.password=自己申请的邮件密码
# 配置默认编码
spring.mail.default-encoding=UTF-8
# SSL 连接配置
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
# 开启 debug，这样方便开发者查看邮件发送日志
spring.mail.properties.mail.debug=true
#邮件配置结束
#Spring redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.host=${host}
spring.redis.port=6379
spring.redis.password=你的redis密码
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=2000
#项目目录
project.folder=服务器的后端项目所在目录
#日志级别配置
log.root.level=INFO
#超级管理员id  多个用，隔开
admin.emails=邮箱1，邮箱2
#是否是开发环境
dev=true
##qq登陆相关##
qq.app.id=12333
qq.app.key=2222222
qq.url.authorization=https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=%s&redirect_uri=%s&state=%s
qq.url.access.token=https://graph.qq.com/oauth2.0/token?grant_type=authorization_code&client_id=%s&client_secret=%s&code=%s&redirect_uri=%s
qq.url.openid=https://graph.qq.com/oauth2.0/me?access_token=%S
qq.url.user.info=https://graph.qq.com/user/get_user_info?access_token=%s&oauth_consumer_key=%s&openid=%s
## 前端的回调地址
qq.url.redirect=http://easypan.wuhancoder.com/qqlogincalback
##解决swagger与springboot不兼容
##spring.mvc.pathmatch.matching-strategy=ant_path_matcher
##knife4j.enable=true
## mq
spring.rabbitmq.username=用户名
spring.rabbitmq.password=密码
spring.rabbitmq.host=${host}
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/